// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAMLPortal.Models;

namespace SAMLPortal.Migrations
{
    [DbContext(typeof(SAMLPortalContext))]
    [Migration("20200325091540_Setup")]
    partial class Setup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SAMLPortal.Models.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("App");
                });

            modelBuilder.Entity("SAMLPortal.Models.Setup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdministratorsFilter")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("BindDn")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("BindPass")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DisplayNameAttr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsConfigured")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInMaintenance")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LdapHost")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MemberOfAttr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SearchBase")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TemporaryPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UidAttr")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UsersFilter")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Setup");
                });
#pragma warning restore 612, 618
        }
    }
}
